{"version":3,"file":"static/js/127.3e0e65a7.chunk.js","mappings":"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","sources":["views/Admin/AddDoctor.js","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import React from 'react'\r\nimport { message } from 'antd'\r\nimport axios from 'axios'\r\nimport { useState } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Row from 'react-bootstrap/Row'\r\nconst AddDoctor = () => {\r\n  const [name, setName] = useState('')\r\n  const [uniqueId, setUniqueId] = useState('')\r\n  const [gender, setGender] = useState('Male')\r\n  const [age, setAge] = useState()\r\n  const [email, setEmail] = useState('')\r\n  const [mobileNumber, setMobileNumber] = useState('')\r\n  const [specialization, setSpecialization] = useState('Eye Care' )\r\n  const [address, setAddress] = useState('')\r\n  const [zip, setZip] = useState('')\r\n  const [experience, setExperience] = useState('')\r\n\r\n  const [validated, setValidated] = useState(false)\r\n\r\n  const handleSubmit = async (e) => {\r\n    const form = e.currentTarget\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault()\r\n      e.stopPropagation()\r\n      setValidated(true)\r\n      return\r\n    }\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    try {\r\n      const formData = {\r\n        name,\r\n        uniqueId,\r\n        gender,\r\n        age,\r\n        email,\r\n        mobileNumber,\r\n        specialization,\r\n        password: mobileNumber,\r\n        address,\r\n        zip,\r\n        experience,\r\n      }\r\n      const res = axios.post('/api/v1/admin/addNewDocotor', { formData })\r\n      if (res.data.success) {\r\n        message.success('Doctor Added Successfully')\r\n      }\r\n    } catch (error) {\r\n      message.error('Something went wrong')\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container justify-content-center d-flex mt-5 w-100 \">\r\n      <Form noValidate validated={validated} onSubmit={handleSubmit} autoComplete=\"off\">\r\n        <Row className=\"mb-3\">\r\n          <Form.Group\r\n            as={Col}\r\n            className=\"col-sm-12 col-lg-4 col-xs-12 col-md-4 col-12\"\r\n            controlId=\"formFirstName\"\r\n          >\r\n            <Form.Label>First Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter First Name\"\r\n              onChange={(e) => {\r\n                setName(e.target.value)\r\n                // setEmail(`${firstName}${mobileNumber}@hms`)\r\n              }}\r\n              value={name}\r\n              required\r\n            />\r\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group\r\n            as={Col}\r\n            className=\"col-sm-12 col-lg-4 col-xs-12 col-md-4 col-12\"\r\n            controlId=\"formMobileNumber\"\r\n          >\r\n            <Form.Label>Mobile Number</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"Enter Mobile Number\"\r\n              onChange={(e) => setMobileNumber(e.target.value)}\r\n              value={mobileNumber}\r\n              required\r\n            />\r\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <Form.Group\r\n            as={Col}\r\n            className=\"col-sm-12 col-lg-4 col-xs-12 col-md-4 col-12\"\r\n            controlId=\"formLastName\"\r\n          >\r\n            <Form.Label>Unique Id</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Last Name\"\r\n              onChange={(e) => setUniqueId(`AMN-DOC-${mobileNumber.split('').slice(7).join('')}`)}\r\n              value={uniqueId}\r\n              required\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group\r\n            as={Col}\r\n            className=\"col-sm-12 col-lg-4 col-xs-12 col-md-4 col-12\"\r\n            controlId=\"formGender\"\r\n          >\r\n            <Form.Label>Gender</Form.Label>\r\n            <Form.Select onChange={(e) => setGender(e.target.value)} value={gender}>\r\n              <option>Male</option>\r\n              <option>Female</option>\r\n            </Form.Select>\r\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <Form.Group\r\n            as={Col}\r\n            className=\"col-sm-12 col-lg-4 col-xs-12 col-md-4 col-12\"\r\n            controlId=\"formGender\"\r\n          >\r\n            <Form.Label>specialization</Form.Label>\r\n            <Form.Select onChange={(e) => setSpecialization(e.target.value)} value={specialization}>\r\n              <option>Eye Care</option>\r\n              <option>Psychotherapy</option>\r\n              <option>Primary Care</option>\r\n              <option>Dental Care</option>\r\n              <option>Orthopedic</option>\r\n              <option>Cardiology</option>\r\n              <option>Gynecology</option>\r\n              <option>Neurology</option>\r\n              <option>Dermatologists</option>\r\n              <option>Nutritionists</option>\r\n              <option>Physical Therapists</option>\r\n            </Form.Select>\r\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Row>\r\n\r\n        <Row className=\"mb-3\">\r\n          <Form.Group\r\n            as={Col}\r\n            className=\"col-sm-12 col-lg-4 col-xs-12 col-md-4 col-12\"\r\n            controlId=\"formAge\"\r\n          >\r\n            <Form.Label>Age</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Age\"\r\n              onChange={(e) => setAge(e.target.value)}\r\n              value={age}\r\n              required\r\n            />\r\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <Form.Group\r\n            as={Col}\r\n            className=\"col-sm-12 col-lg-4 col-xs-12 col-md-4 col-12\"\r\n            controlId=\"formLastName\"\r\n          >\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              className=\"disabled\"\r\n              placeholder=\"Enter Email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              value={email}\r\n              required\r\n            />\r\n            {/* <Form.Control type=\"text\" placeholder=\"Enter Last Name\" value={email} required /> */}\r\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Row>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            placeholder=\"1234 Main St\"\r\n            onChange={(e) => setAddress(e.target.value)}\r\n            value={address}\r\n            required\r\n          />\r\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Row className=\"mb-3\">\r\n          <Form.Group\r\n            as={Col}\r\n            controlId=\"formGridZip\"\r\n            className=\"col-4 col-sm-12 col-lg-4 col-xs-12 col-md-4 col-12\"\r\n          >\r\n            <Form.Label>Zip</Form.Label>\r\n            <Form.Control\r\n              onChange={(e) => setZip(e.target.value)}\r\n              value={zip}\r\n              required\r\n              placeholder=\"325501\"\r\n            />\r\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Row>\r\n        <Button\r\n          variant=\"primary\"\r\n          className=\"col-3 col-sm-12 col-lg-3 col-xs-12 col-md-3 col-12 offset-md-9\"\r\n          type=\"submit\"\r\n        >\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddDoctor\r\n// {\r\n//     \"name\": \"Nikhat\",\r\n//     \"uniqueId\": \"AMN-DOC-955\",\r\n//     \"gender\": \"female\",\r\n//     \"age\": 22,\r\n//     \"email\": \"nikhat@gmail.com\",\r\n//     \"mobileNumber\": \"9714067955\",\r\n//     \"specialization\" : \"Neurology\",\r\n//     \"password\": \"password\",\r\n//     \"address\": \"Ahmd\",\r\n//     \"zip\": 380028,\r\n//     \"experience\": \"2 years of \"\r\n// }\r\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","uniqueId","setUniqueId","_useState5","_useState6","gender","setGender","_useState7","_useState8","age","setAge","_useState9","_useState10","email","setEmail","_useState11","_useState12","mobileNumber","setMobileNumber","_useState13","_useState14","specialization","setSpecialization","_useState15","_useState16","address","setAddress","_useState17","_useState18","zip","setZip","_useState19","_useState20","experience","_useState21","_useState22","validated","setValidated","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","formData","wrap","_context","prev","next","currentTarget","checkValidity","preventDefault","stopPropagation","abrupt","password","axios","post","data","success","message","error","console","log","stop","_x","apply","arguments","_jsx","className","children","_jsxs","Form","noValidate","onSubmit","autoComplete","Row","Group","as","Col","controlId","Label","Control","type","placeholder","onChange","target","value","required","Feedback","concat","split","slice","join","Select","Button","variant","_excluded","React","ref","bsPrefix","_ref$as","Component","props","_objectWithoutProperties","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","_objectSpread","classNames","displayName"],"sourceRoot":""}