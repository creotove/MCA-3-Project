{"version":3,"file":"static/js/493.8d174ee5.chunk.js","mappings":"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","sources":["routes.js","components/AppContent.js","components/AppFooter.js","components/header/AppHeaderDropdown.js","components/AppHeader.js","components/AppSidebarNav.js","_nav.js","components/AppSidebar.js","layout/DefaultLayout.js"],"sourcesContent":["import React from 'react'\n\nconst FourOFour = React.lazy(() => import('./views/pages/page404/Page404'))\n\nconst Admin = React.lazy(() => import('./views/Admin/Index'))\nconst Patient = React.lazy(() => import('./views/Patient/Index'))\nconst Doctor = React.lazy(() => import('./views/Doctor/Index'))\nconst Receptionist = React.lazy(() => import('./views/Receptionist/Index'))\n\nconst AddNewPatient = React.lazy(() => import('./views/Receptionist/AddNewPatient'))\nconst ExistingPatient = React.lazy(() => import('./views/Receptionist/ExistingPatient'))\nconst FindPatientRecord = React.lazy(() => import('./views/Receptionist/FindPatientRecord'))\nconst UpdatePatientDetails = React.lazy(() => import('./views/Receptionist/UpdatePatientDetails'))\nconst AttachPatientReport = React.lazy(() => import('./views/Receptionist/AttachPatientReport'))\nconst Billing = React.lazy(() => import('./views/Receptionist/Billing'))\nconst ReceptionistProfile = React.lazy(() => import('./views/Receptionist/Profile'))\n\nconst PatientProfile = React.lazy(() => import('./views/Patient/Profile'))\nconst Visits = React.lazy(() => import('./views/Patient/Visits'))\nconst Bills = React.lazy(() => import('./views/Patient/Bills'))\nconst LabResults = React.lazy(() => import('./views/Patient/LabResults'))\n\nconst AddReceptionist = React.lazy(() => import('./views/Admin/AddReceptionist'))\nconst AddDoctor = React.lazy(() => import('./views/Admin/AddDoctor'))\n\nconst PatientForCheckUp = React.lazy(() => import('./views/Doctor/PatientForCheckUp'))\nconst CheckupForm = React.lazy(() => import('./views/Doctor/CheckUpForm'))\n\nconst routes = [\n  { path: '/patient', exact: true, name: 'Patient', element: Patient },\n  { path: '/admin', exact: true, name: 'Admin', element: Admin },\n  { path: '/doctor', exact: true, name: 'Doctor', element: Doctor },\n  { path: '/receptionist', exact: true, name: 'Receptionist', element: Receptionist },\n\n  { path: '/patient-profile', exact: true, name: 'Profile', element: PatientProfile },\n  { path: '/patient-visits', exact: true, name: 'Visits', element: Visits },\n  { path: '/patient-bills', exact: true, name: 'Bills', element: Bills },\n  { path: '/patient-lab-results', exact: true, name: 'Lab Results', element: LabResults },\n\n  { path: '/add-new-patient', exact: true, name: 'Add a new Patient', element: AddNewPatient },\n  { path: '/add-for-checkup', exact: true, name: 'Existing Patient', element: ExistingPatient },\n  {\n    path: '/find-patient-history',\n    exact: true,\n    name: 'Find Patient History',\n    element: FindPatientRecord,\n  },\n  {\n    path: '/update-patient-data',\n    exact: true,\n    name: 'Update Patient Details',\n    element: UpdatePatientDetails,\n  },\n  {\n    path: '/attach-patient-report',\n    exact: true,\n    name: 'Attach Report of Patient',\n    element: AttachPatientReport,\n  },\n  { path: '/add-bill', exact: true, name: 'Billing', element: Billing },\n  { path: '/receptionist-profile', exact: true, name: 'Profile', element: ReceptionistProfile },\n\n  { path: 'add-doctor', exact: true, name: 'Add Doctor', element: AddDoctor },\n  { path: 'add-reciptionist', exact: true, name: 'Add Reciptionist', element: AddReceptionist },\n  {\n    path: '/patients-for-checkup',\n    name: 'Patient for checkup',\n    exact: true,\n    element: PatientForCheckUp,\n  },\n  { path: '/checkup-form', name: 'Check up form', exact: true, element: CheckupForm },\n\n  { path: '/*', name: '404', element: <FourOFour /> },\n]\n\nexport default routes\n","import React, { Suspense } from 'react'\nimport { Navigate, Route, Routes } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n\nconst AppContent = () => {\n  return (\n    <CContainer lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Routes>\n          {routes.map((route, idx) => {\n            return (\n              route.element && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  element={<route.element />}\n                />\n              )\n            )\n          })}\n          <Route path=\"/\" element={<Navigate to=\"dashboard\" replace />} />\n        </Routes>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst AppFooter = () => {\n  return (\n    <CFooter>\n      <div className='ms-auto'>\n        Aman\n        <span className=\"ms-1\">&copy; 2023</span>\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(AppFooter)\n","import React from 'react'\nimport {\n  CAvatar,\n  CDropdown,\n  CDropdownHeader,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n} from '@coreui/react'\nimport avatar8 from '../../assets/avatars/8.jpg'\nimport { cilAccountLogout } from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\n\nimport { useNavigate } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { userSlice } from '../../features/userSlice'\nimport { Button } from 'react-bootstrap'\n\nconst AppHeaderDropdown = () => {\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n  const user = useSelector((state) => state.user)\n  return (\n    <CDropdown variant=\"nav-item\">\n      <CDropdownToggle placement=\"bottom-end\" className=\"py-0\" caret={false}>\n        <CAvatar src={avatar8} size=\"md\" />\n      </CDropdownToggle>\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n        <CDropdownHeader className=\"bg-light fw-semibold py-2\">Account</CDropdownHeader>\n        <CDropdownItem>\n          <Button\n            onClick={() => {\n              navigate('/login')\n              localStorage.clear()\n              dispatch(userSlice.actions.clearUser())\n            }}\n            className=\"btn-danger\"\n          >\n            <CIcon icon={cilAccountLogout} className=\"me-2\" />\n            Logout\n          </Button>\n        </CDropdownItem>\n      </CDropdownMenu>\n    </CDropdown>\n  )\n}\n\nexport default AppHeaderDropdown\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { CContainer, CHeader, CHeaderBrand, CHeaderNav, CHeaderToggler } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilMenu, cilPlus } from '@coreui/icons'\n\nimport { AppHeaderDropdown } from './header/index'\nimport { toggleSidebar } from '../features/sideBarSlice'\n\nconst AppHeader = () => {\n  const user = useSelector((state) => state.user.user)\n  const dispatch = useDispatch()\n\n  return (\n    <CHeader\n      position=\"sticky\"\n      className=\"mb-4\"\n      style={{\n        zIndex: 1,\n      }}\n    >\n      <CContainer fluid>\n        <CHeaderToggler className=\"ps-1\" onClick={() => dispatch(toggleSidebar())}>\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n        <CHeaderBrand className=\"mx-auto d-md-none d-flex\" to=\"/\">\n          <h3>Aman</h3>\n          <CIcon icon={cilPlus} className=\"text-success\" color=\"success\" size=\"lg\" />\n        </CHeaderBrand>\n        <CHeaderNav className=\" \"></CHeaderNav>\n        <CHeaderNav className=\"ms-3 d-flex align-items-center\">\n          <span className=\"bg-black text-white rounded-2 p-2\">{user && user.uniqueId}</span>\n          <AppHeaderDropdown />\n        </CHeaderNav>\n      </CContainer>\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\nimport { useSelector } from 'react-redux'\n\nexport const AppSidebarNav = ({ items }) => {\n  const user = useSelector((state) => state.user.user)\n  const location = useLocation()\n\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const userRole = user && user.role  ? user.role : 'patient' // Replace with 'receptionist' or 'patient' based on the user's type\n\n  // Filter the navigation items based on the user type\n  const filteredNav = items.filter((item) => {\n    if (userRole === 'receptionist') {\n      return item.isReceptionist\n    } else if (userRole === 'patient') {\n      return item.isPatient\n    } else if (userRole === 'admin') {\n      return item.isAdmin\n    } else if (userRole === 'doctor') {\n      return item.isDoctor\n    }\n    // Add more conditions for other user types if needed\n    return true // Include items that don't have specific type restrictions\n  })\n\n\n\n   const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n\n  const renderNavGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    const isActive = location.pathname.startsWith(to)\n\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={isActive}\n        {...rest}\n      >\n        {item.items?.map(\n          (nestedItem, nestedIndex) =>\n            nestedItem.items\n              ? renderNavGroup(nestedItem, nestedIndex) // Recursively render nested groups\n              : navItem(nestedItem, nestedIndex), // Render nested items\n        )}\n      </Component>\n    )\n  }\n\n  // ...\n\n  const renderedNav = filteredNav.map((item, index) => {\n    if (item.items) {\n      return renderNavGroup(item, index)\n    } else {\n      return navItem(item, index)\n    }\n  })\n\n  return <React.Fragment>{(items && items.items && renderNavGroup) || renderedNav}</React.Fragment>\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilApplicationsSettings,\n  cilCalendar,\n  cilCloudUpload,\n  cilDescription,\n  cilDollar,\n  cilHome,\n  cilUser,\n  cilUserPlus,\n} from '@coreui/icons'\nimport { CNavItem } from '@coreui/react'\n\nconst _nav = [\n  {\n    component: CNavItem,\n    name: 'Home',\n    to: '/receptionist',\n    icon: <CIcon icon={cilHome} customClassName=\"nav-icon\" />,\n    isReceptionist: true,\n  },\n  {\n    component: CNavItem,\n    name: 'Home',\n    to: '/doctor',\n    icon: <CIcon icon={cilHome} customClassName=\"nav-icon\" />,\n    isDoctor: true,\n  },\n  {\n    component: CNavItem,\n    name: 'Patients for Checkup',\n    to: '/patients-for-checkup',\n    icon: <CIcon icon={cilUser} customClassName=\"nav-icon\" />,\n    isDoctor: true,\n  },\n\n  {\n    component: CNavItem,\n    name: 'Home',\n    to: '/admin',\n    icon: <CIcon icon={cilHome} customClassName=\"nav-icon\" />,\n    isAdmin: true,\n  },\n  {\n    component: CNavItem,\n    name: 'Add Doctor',\n    to: '/add-doctor',\n    icon: <CIcon icon={cilUserPlus} customClassName=\"nav-icon\" />,\n    isAdmin: true,\n  },\n  {\n    component: CNavItem,\n    name: 'Add Reciptionist',\n    to: '/add-reciptionist',\n    icon: <CIcon icon={cilUserPlus} customClassName=\"nav-icon\" />,\n    isAdmin: true,\n  },\n  {\n    component: CNavItem,\n    name: 'Home',\n    to: '/patient',\n    icon: <CIcon icon={cilHome} customClassName=\"nav-icon\" />,\n    isPatient: true,\n  },\n\n  {\n    component: CNavItem,\n    name: 'Add New Patient',\n    to: '/add-new-patient',\n    icon: <CIcon icon={cilUserPlus} customClassName=\"nav-icon\" />,\n    isReceptionist: true,\n  },\n  {\n    component: CNavItem,\n    name: 'Add for Checkup',\n    to: '/add-for-checkup',\n    icon: <CIcon icon={cilUser} customClassName=\"nav-icon\" />,\n    isReceptionist: true,\n  },\n  {\n    component: CNavItem,\n    name: 'Find Patient History',\n    to: '/find-patient-history',\n    icon: <CIcon icon={cilDescription} customClassName=\"nav-icon\" />,\n    isReceptionist: true,\n    isDoctor: true,\n  },\n  {\n    component: CNavItem,\n    name: 'Update Patient Details',\n    to: '/update-patient-data',\n    icon: <CIcon icon={cilCloudUpload} customClassName=\"nav-icon\" />,\n    isReceptionist: true,\n  },\n  {\n    component: CNavItem,\n    name: 'Attach Report of Patient',\n    to: '/attach-patient-report',\n    icon: <CIcon icon={cilApplicationsSettings} customClassName=\"nav-icon\" />,\n    isReceptionist: true,\n  },\n  {\n    component: CNavItem,\n    name: 'Billing',\n    to: '/add-bill',\n    icon: <CIcon icon={cilDollar} customClassName=\"nav-icon\" />,\n    isReceptionist: true,\n  },\n  {\n    component: CNavItem,\n    name: 'Profile',\n    to: '/receptionist-profile',\n    icon: <CIcon icon={cilUser} customClassName=\"nav-icon\" />,\n    isReceptionist: true,\n  },\n\n  {\n    component: CNavItem,\n    name: 'Visits',\n    to: '/patient-visits',\n    icon: <CIcon icon={cilCalendar} customClassName=\"nav-icon\" />,\n    isPatient: true,\n  },\n  {\n    component: CNavItem,\n    name: 'Bills',\n    to: '/patient-bills',\n    icon: <CIcon icon={cilDollar} customClassName=\"nav-icon\" />,\n    isPatient: true,\n  },\n  {\n    component: CNavItem,\n    name: 'Lab Results',\n    to: '/patient-lab-results',\n    icon: <CIcon icon={cilDescription} customClassName=\"nav-icon\" />,\n    isPatient: true,\n  },\n\n  {\n    component: CNavItem,\n    name: 'Profile',\n    to: '/patient-profile',\n    icon: <CIcon icon={cilUser} customClassName=\"nav-icon\" />,\n    isPatient: true,\n  },\n]\n\nexport default _nav\n\n// {\n//   component: CNavGroup,\n//   name: 'Base',\n//   to: '/base',\n//   icon: <CIcon icon={cilPuzzle} customClassName=\"nav-icon\" />,\n//   items: [\n//     {\n//       component: CNavItem,\n//       name: 'Accordion',\n//       to: '/base/accordion',\n//     },\n//     {\n//       component: CNavItem,\n//       name: 'Breadcrumb',\n//       to: '/base/breadcrumbs',\n//     },\n//     {\n//       component: CNavItem,\n//       name: 'Cards',\n//       to: '/base/cards',\n//     },\n//     {\n//       component: CNavItem,\n//       name: 'Carousel',\n//       to: '/base/carousels',\n//     },\n//     {\n//       component: CNavItem,\n//       name: 'Collapse',\n//       to: '/base/collapses',\n//     },\n//     {\n//       component: CNavItem,\n//       name: 'List group',\n//       to: '/base/list-groups',\n//     },\n//     {\n//       component: CNavItem,\n//       name: 'Navs & Tabs',\n//       to: '/base/navs',\n//     },\n//     {\n//       component: CNavItem,\n//       name: 'Pagination',\n//       to: '/base/paginations',\n//     },\n//     {\n//       component: CNavItem,\n//       name: 'Placeholders',\n//       to: '/base/placeholders',\n//     },\n//     {\n//       component: CNavItem,\n//       name: 'Popovers',\n//       to: '/base/popovers',\n//     },\n//     {\n//       component: CNavItem,\n//       name: 'Progress',\n//       to: '/base/progress',\n//     },\n//     {\n//       component: CNavItem,\n//       name: 'Spinners',\n//       to: '/base/spinners',\n//     },\n//     {\n//       component: CNavItem,\n//       name: 'Tables',\n//       to: '/base/tables',\n//     },\n//     {\n//       component: CNavItem,\n//       name: 'Tooltips',\n//       to: '/base/tooltips',\n//     },\n//   ],\n// },\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { CSidebar, CSidebarBrand, CSidebarNav, CSidebarToggler } from '@coreui/react'\n\nimport { AppSidebarNav } from './AppSidebarNav'\n\nimport { toggleSidebar } from '../features/sideBarSlice'\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\n\n// sidebar nav config\nimport navigation from '../_nav'\nimport CIcon from '@coreui/icons-react'\nimport { cilPlus } from '@coreui/icons'\n\nconst AppSidebar = () => {\n  const sidebarVisible = useSelector((state) => state.sidebar.sidebarVisible)\n  const dispatch = useDispatch()\n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      className=\"w-20\"\n      visible={sidebarVisible}\n    >\n      <CSidebarBrand className=\"d-none d-md-flex\" to=\"/\">\n        <h3>Aman</h3>\n        <CIcon icon={cilPlus} className=\"text-success\" size=\"lg\" />\n      </CSidebarBrand>\n      <CSidebarNav>\n        <SimpleBar>\n          <AppSidebarNav items={navigation} />\n        </SimpleBar>\n      </CSidebarNav>\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import React from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\nimport ProtectedRoutes from '../components/ProtectedRoutes'\n\nconst DefaultLayout = () => {\n  return (\n    <>\n      <ProtectedRoutes>\n        <div>\n          <AppSidebar />\n          <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n            <AppHeader />\n            <div className=\"body flex-grow-1 px-3\">\n              <AppContent />\n            </div>\n            <AppFooter />\n          </div>\n        </div>\n      </ProtectedRoutes>\n    </>\n  )\n}\n\nexport default DefaultLayout\n"],"names":["FourOFour","React","Admin","Patient","Doctor","Receptionist","AddNewPatient","ExistingPatient","FindPatientRecord","UpdatePatientDetails","AttachPatientReport","Billing","ReceptionistProfile","PatientProfile","Visits","Bills","LabResults","AddReceptionist","path","exact","name","element","_jsx","AppContent","CContainer","lg","children","Suspense","fallback","CSpinner","color","_jsxs","Routes","routes","map","route","idx","Route","Navigate","to","replace","AppFooter","CFooter","className","navigate","useNavigate","dispatch","useDispatch","useSelector","state","user","CDropdown","variant","CDropdownToggle","placement","caret","CAvatar","src","avatar8","size","CDropdownMenu","CDropdownHeader","CDropdownItem","Button","onClick","localStorage","clear","userSlice","actions","clearUser","CIcon","icon","cilAccountLogout","CHeader","position","style","zIndex","fluid","CHeaderToggler","toggleSidebar","cilMenu","CHeaderBrand","cilPlus","CHeaderNav","uniqueId","AppHeaderDropdown","AppSidebarNav","_ref","items","location","useLocation","navLink","badge","_Fragment","CBadge","text","userRole","role","filteredNav","filter","item","isReceptionist","isPatient","isAdmin","isDoctor","navItem","index","component","rest","_objectWithoutProperties","_excluded","Component","_createElement","_objectSpread","NavLink","key","renderNavGroup","_item$items","_excluded2","isActive","pathname","startsWith","String","toggler","visible","nestedItem","nestedIndex","renderedNav","CNavItem","cilHome","customClassName","cilUser","cilUserPlus","cilDescription","cilCloudUpload","cilApplicationsSettings","cilDollar","cilCalendar","AppSidebar","sidebarVisible","sidebar","CSidebar","CSidebarBrand","CSidebarNav","SimpleBar","navigation","ProtectedRoutes","AppHeader"],"sourceRoot":""}